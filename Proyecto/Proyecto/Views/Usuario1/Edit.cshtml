@model Proyecto.Models.Usuario

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Usuario1", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Usuario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdUsuario)

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.carne, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.carne, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.carne, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contraseña, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contraseña, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contraseña, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.confirmarContraseña, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.confirmarContraseña, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.confirmarContraseña, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.idRol, "idRol", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idRol", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idRol, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.Label("Foto", new { @class = "control-label col-md-2" })
            <div>
                <input type="file" id="foto" name="iUsuario" />
            </div>
        </div>

        @if (Model.ImagenUsuario.Any(f => f.tip == Proyecto.Models.FileType.Imagen))
        {
            <dt>
                Imagen
            </dt>
            <dd>
                <img src="~/ImagenUsuario?id=@Model.ImagenUsuario.First(f => f.tip == Proyecto.Models.FileType.Imagen).idImagenUsuario" alt="imagen" width="200" />
            </dd>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    
    
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
